generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bookings {
  id           Int             @id @default(autoincrement())
  user_id      Int
  business_id  Int
  service_id   Int
  employee_id  Int?
  booking_date DateTime        @db.Date
  booking_time DateTime        @db.Time(0)
  status       bookings_status @default(pendiente)
  notes        String?         @db.Text
  created_at   DateTime?       @default(now()) @db.Timestamp(0)
  employees    employees?      @relation(fields: [employee_id], references: [id], onUpdate: NoAction, map: "bookings_employee_fk")
  users        users           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "bookings_ibfk_1")
  businesses   businesses      @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "bookings_ibfk_2")
  services     services        @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "bookings_ibfk_3")

  @@index([employee_id], map: "bookings_employee_fk")
  @@index([business_id], map: "business_id")
  @@index([booking_date, booking_time], map: "idx_booking_date_time")
  @@index([status], map: "idx_booking_status")
  @@index([service_id], map: "service_id")
  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model businesses {
  id            Int         @id @default(autoincrement())
  user_id       Int
  name          String      @db.VarChar(255)
  address       String?     @db.Text
  phone         String?     @db.VarChar(20)
  email         String      @db.VarChar(255)
  description   String?     @db.Text
  category      String?     @db.VarChar(100)
  image         String?     @db.VarChar(255)
  is_open       Boolean?    @default(true)
  created_at    DateTime?   @default(now()) @db.Timestamp(0)
  opening_hours String?     @db.VarChar(100)
  is_featured   Boolean?    @default(false)
  bookings      bookings[]
  users         users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "businesses_ibfk_1")
  employees     employees[]
  reviews       reviews[]
  services      services[]

  @@index([user_id], map: "user_id")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model employees {
  id            Int        @id @default(autoincrement())
  business_id   Int
  name          String     @db.VarChar(255)
  position      String?    @db.VarChar(100)
  specialties   String?    @db.Text
  profile_image String?    @db.VarChar(255)
  created_at    DateTime?  @default(now()) @db.Timestamp(0)
  updated_at    DateTime?  @default(now()) @db.Timestamp(0)
  bookings      bookings[]
  businesses    businesses @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "employees_ibfk_1")

  @@index([business_id], map: "business_id")
}

model reviews {
  id          Int        @id @default(autoincrement())
  business_id Int
  user_id     Int
  rating      Decimal    @db.Decimal(3, 1)
  comment     String?    @db.Text
  created_at  DateTime?  @default(now()) @db.Timestamp(0)
  businesses  businesses @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "reviews_ibfk_1")
  users       users      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "reviews_ibfk_2")

  @@index([business_id], map: "business_id")
  @@index([user_id], map: "user_id")
}

model services {
  id               Int        @id @default(autoincrement())
  business_id      Int
  name             String     @db.VarChar(255)
  description      String?    @db.Text
  duration_minutes Int
  category         String?    @db.VarChar(65)
  price            Decimal    @db.Decimal(10, 2)
  created_at       DateTime?  @default(now()) @db.Timestamp(0)
  bookings         bookings[]
  businesses       businesses @relation(fields: [business_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "services_ibfk_1")

  @@index([business_id], map: "business_id")
}

model users {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(255)
  email      String       @unique(map: "email") @db.VarChar(255)
  password   String       @db.VarChar(255)
  phone      Int?
  role       users_role   @default(client)
  created_at DateTime?    @default(now()) @db.Timestamp(0)
  google_id  String?      @db.VarChar(255)
  bookings   bookings[]
  businesses businesses[]
  reviews    reviews[]
}

enum users_role {
  cliente
  negocio
  client
  business_owner
}

enum bookings_status {
  pendiente
  confirmada
  cancelada
  completada
  rechazada
}
