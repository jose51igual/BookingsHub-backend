name: Desplegar Backend

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    name: Desplegar Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Instalar dependencias
      run: |
        npm ci
        npm test
      env:
        NODE_ENV: test
        
    - name: Crear directorio de despliegue
      run: |
        mkdir -p deploy
        shopt -s extglob
        cp -r !(deploy|.git*|.github|node_modules|logs|tests) deploy/
        
    - name: Desplegar en el servidor
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          # Backup de la versión actual
          [ -d "/var/www/bookings-hub/current" ] && mv /var/www/bookings-hub/current /var/www/bookings-hub/backup_$(date +%Y%m%d_%H%M%S)
          mkdir -p /var/www/bookings-hub/current
          
    - name: Subir archivos al servidor
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        source: "deploy/*"
        target: "/var/www/bookings-hub/current"
        strip_components: 1

    - name: Configurar y reiniciar aplicación
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT || 22 }}
        script: |
          cd /var/www/bookings-hub/current

          # Instalar dependencias
          npm ci --production

          # Crear archivo .env
          cat > .env << EOF
          NODE_ENV=production
          PORT=${{ secrets.PORT || 3000 }}
          DATABASE_URL="mysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT || 3306 }}/${{ secrets.DB_NAME }}"
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN || '24h' }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI || 'http://localhost:3000/auth/google/callback' }}
          LOG_LEVEL=${{ secrets.LOG_LEVEL || 'info' }}
          EOF
          
          # Configurar base de datos
          npx prisma generate
          npx prisma migrate deploy
          npx prisma db seed
          
          # Instalar PM2 si es necesario y reiniciar app
          command -v pm2 >/dev/null 2>&1 || sudo npm install -g pm2
          pm2 delete bookings-hub-backend || true
          pm2 start ecosystem.config.js --env production
          pm2 save
